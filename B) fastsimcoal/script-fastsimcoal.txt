############ FASTSIMCOAL ############

#### First make a file with all file names together e.g.
ls -d /prj/furseal-genome/RAD-demography/data/*sorted.bam >> AFS_RAD_all_ids.txt

## then run angsd to create the SFS: two step process
/prj/blackgrouse/bin/angsd/angsd -bam /prj/furseal-genome/RAD_demography/data/AFS_RAD_all_ids.txt -doSaf 1 -out /prj/furseal-genome/RAD_demography/data/Folded_SFS_allids -anc /prj/furseal-genome/Seals/Seal_genome/antarctic_fur_seal_02Jun2018_WAj4l.fasta -GL 1 -P 4 -minMapQ 20 -minQ 20
/prj/blackgrouse/bin/angsd/misc/realSFS /prj/furseal-genome/RAD_demography/data/Folded_SFS_allids/Folded_SFS_allids.saf.idx -maxIter 1000 -P 4 -fold 1 > /prj/furseal-genome/RAD_demography/data/Folded_SFS_allids/Folded_realSFS.sfs


# for all ids:
/prj/blackgrouse/bin/angsd/angsd -bam /prj/furseal-genome/RAD_demography/data/AFS_RAD_all_ids.txt -doSaf 1 -out /prj/furseal-genome/RAD_demography/data/Folded_SFS_allids -anc /prj/furseal-genome/Seals/Seal_genome/antarctic_fur_seal_02Jun2018_WAj4l.fasta -ref /prj/furseal-genome/Seals/Seal_genome/antarctic_fur_seal_02Jun2018_WAj4l.fasta -GL 1 -P 4 -minMapQ 20 -minQ 20 -uniqueOnly 1 -remove_bads 1 -baq 1 -minInd 63 -setMinDepth 315 -setMaxDepth 3600 -doCounts 1
/prj/blackgrouse/bin/angsd/misc/realSFS /prj/furseal-genome/RAD_demography/data/Folded_SFS_allids/Folded_SFS_allids.saf.idx -maxIter 1000 -P 4 -fold 1 > /prj/furseal-genome/RAD_demography/data/Folded_SFS_allids/Folded_allids_realSFS.sfs
# mindepth = nind * 5, max depth according histogram coverage 

# count sites
zcat Folded_SFS.saf.gz | tail -n+2 | wc 

## then convert the SFS to the format needed for fastsimcoal using R

setwd("/prj/furseal-genome/RAD_demography/data/Folded_SFS/")
sfs <- scan("Folded_realSFS.sfs")
sfs <- c(sfs, rep(0, length(sfs)-1))
length(sfs)
# create names
sfs_names <- sapply(0:(length(sfs)-1), function(x) paste0("d0_", x))

sink("/prj/furseal-genome/RAD_demography/fastsimcoal/AFS_RAD.obs")
cat("1 observations")
cat("\n")
cat(sfs_names)
cat("\n")
cat(sfs)
sink()

### Then continue with fastsimcoal in bash:
# Three different files needed: .tpl (template), the .est (priors and rules file) and the .obs SFS estimates. These can be found within the B) fastsimcoal directory
# files for null model: AFS_RAD_null_allids.est and files for null model: AFS_RAD_null_allids.tpl
# files for alternative model: AFS_RAD_alt4_allids.est and files for null model: AFS_RAD_alt4_allids.tpl
# observed SFS: AFS_RAD_alt4_allids_MAFpop0.obs (rename file to AFS_RAD_null_allids_MAFpop0.obs when running the null model)

# There are seperate files for the two models: the null model and alternative model. For each, 100 simulations were run 100 times using the following scripts:

## null model

#/bin/bash
for i in {1..100};
do
/prj/blackgrouse/bin/fsc27_linux64/fsc2702 -t AFS_RAD_null_allids.tpl -n 100000 -m -e AFS_RAD_null_allids.est -M -L 100 -q -w 0.01 --foldedSFS -x -C 5 --nosingleton
mv AFS_RAD_null_allids AFS_RAD_null_allids_$i
done

## bottleneck model:

#/bin/bash

for i in {1..100};
do
/prj/blackgrouse/bin/fsc27_linux64/fsc2702 -t AFS_RAD_alt4_allids.tpl -n 100000 -m -e AFS_RAD_alt4_allids.est -M -L 100 -q -w 0.01 --foldedSFS -x -C 5 --nosingleton
mv AFS_RAD_alt4_allids AFS_RAD_alt4_allids_$i
done

# collect all log likelihoods in one file
for i in /prj/furseal-genome/RAD_demography/fastsimcoal/ALL_ids/alt_model4_allids*/AFS_RAD_alt4_allids_*; do cat $i/AFS_RAD_alt4_allids.bestlhoods >> prj/furseal-genome/RAD_demography/fastsimcoal/likelihoods/likelihoods_alt4_allids.txt; done

for i in /prj/furseal-genome/RAD_demography/fastsimcoal/ALL_ids/null_model_allids/AFS_RAD_null_allids_*; do cat $i/AFS_RAD_null_allids.bestlhoods >> prj/furseal-genome/RAD_demography/fastsimcoal/likelihoods/likelihoods_null1_allids.txt; done

# in R, choose the model with lowest AIC

R

likelihoods_alt4_all<- read.table("/prj/furseal-genome/RAD_demography/fastsimcoal/likelihoods/likelihoods_alt4_allids.txt")
likelihoods_null1_all <- read.table("/prj/furseal-genome/RAD_demography/fastsimcoal/likelihoods/likelihoods_null1_allids.txt")

# clean up col names etc
## all ids
head(likelihoods_null1_all)
colnames(likelihoods_null1_all) <- c("NCUR", "MaxEstLhood", "MaxObsLhood")
likelihoods_null1_all <- subset(likelihoods_null1_all, NCUR != "NCUR")
likelihoods_null1_all[c(1:ncol(likelihoods_null1_all))] <- sapply(likelihoods_null1_all[c(1:ncol(likelihoods_null1_all))], as.character)
likelihoods_null1_all[c(1:ncol(likelihoods_null1_all))] <- sapply(likelihoods_null1_all[c(1:ncol(likelihoods_null1_all))], as.numeric)

head(likelihoods_alt4_all)
colnames(likelihoods_alt4_all) <- c("NCUR", "NANC", "NBOT", "GR", "MaxEstLhood", "MaxObsLhood")
likelihoods_alt4_all <- subset(likelihoods_alt4_all, NCUR != "NCUR")
likelihoods_alt4_all[c(1:ncol(likelihoods_alt4_all))] <- sapply(likelihoods_alt4_all[c(1:ncol(likelihoods_alt4_all))], as.character)
likelihoods_alt4_all[c(1:ncol(likelihoods_alt4_all))] <- sapply(likelihoods_alt4_all[c(1:ncol(likelihoods_alt4_all))], as.numeric)

# add AIC

# number of parameters for null model 1 = 1
# number of parameters for null model 2 = 2
# number of paramters for alt model 1 = 3 / for nr 2 = 4, for nr 3 = 3, for nr 4 = 3 (GR is complex)

likelihoods_null1_all$AIC <- 2*(1) - 2*(likelihoods_null1_all$MaxEstLhood/log10(exp(1)))
likelihoods_null1_all$deltaL <- likelihoods_null1_all$MaxObsLhood - likelihoods_null1_all$MaxEstLhood

likelihoods_alt4_all$AIC <- 2*(3) - 2*(likelihoods_alt4_all$MaxEstLhood/log10(exp(1)))
likelihoods_alt4_all$deltaL <- likelihoods_alt4_all$MaxObsLhood - likelihoods_alt4_all$MaxEstLhood

# the best run is the one with the highest likelihood, or the smallest difference between the maximum possible likelihood (MaxObsLhood)
# and the obtained likelihood (MaxEstLhood)




